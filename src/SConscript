# SConscript

import os

env = Environment()

platform = env['PLATFORM']

# Clang
if platform == 'darwin':
    # SCons invokes 'gcc' normally on OS X.
    # Usually this is just clang but with options that we don't need.
    env['CC'] = 'clang'
    env.Append(CFLAGS = ['-Weverything', '-Werror', '-O3'])

# GCC
if platform == 'posix':
    env.Append(
        CFLAGS = ['-Wall', '-Wextra', '-Wpedantic', '-Werror', '-O3'],
        LIBS = ['m', 'bsd'],
    )

# MSVC
if platform == 'win32':
    env.Append(CFLAGS = ['/W4', '/WX', '/Ox'])

# for color terminal output when available
if 'TERM' in os.environ:
    env['ENV']['TERM'] = os.environ['TERM']

getline = env.StaticLibrary('getline', ['getline.c'])
vector = env.StaticLibrary('vector', ['vector.c'])

env.Program('alloc', ['alloc.c'])
env.Program('atof', ['atof.c'])
env.Program('atoi', ['atoi.c'])
env.Program('bits', ['bits.c'])
env.Program('charhist', ['charhist.c'])
env.Program('chario', ['chario.c'])
env.Program('control', ['control.c'])
env.Program('count_digits_and_space', ['count_digits_and_space.c'])
env.Program('decomment', ['decomment.c'])
env.Program('detab', ['detab.c', getline])
env.Program('entab', ['entab.c', getline])
env.Program('escape', ['escape.c', getline])
env.Program('expand', ['expand.c', getline])
env.Program('fold', ['fold.c'])
env.Program('getint', ['getint.c'])
env.Program('hello', ['hello.c'])
env.Program('limits', ['limits.c'])
env.Program('lines', ['lines.c', getline])
env.Program('matcher', ['matcher.c', getline])
env.Program('maxline_extern', ['maxline_extern.c'])
env.Program('misc', ['misc.c'])
env.Program('power', ['power.c'])
env.Program('qsort', ['qsort.c'])
env.Program('recur', ['recur.c'])
env.Program('rpn', ['rpn.c', getline, vector])
env.Program('rpn_char', ['rpn_char.c'])
env.Program('shellsort', ['shellsort.c'])
env.Program('simplecheck', ['simplecheck.c', vector])
env.Program('sort', ['sort.c', getline])
env.Program('strs_test', ['strs_test.c', 'strs.c'])
env.Program('strcmp', ['strcmp.c'])
env.Program('strcpy', ['strcpy.c'])
env.Program('swap', ['swap.c'])
env.Program('temperature', ['temperature.c'])
env.Program('unescape', ['unescape.c', getline])
env.Program('wc', ['wc.c'])
env.Program('wlhist', ['wlhist.c'])
env.Program('words', ['words.c'])
